# Grouping by Species, and Gender and calculating descriptive statistics
summary_table <- df1 %>%
group_by(Species, Gender) %>%
summarize(
Number_of_Observations = n(),
Min_BodyMass = min(BodyMass_g	),
Median_BodyMass = median(BodyMass_g	),
Mean_BodyMass = mean(BodyMass_g	),
Max_BodyMass = max(BodyMass_g	)
)
# View the resulting table
summary_table
library(dplyr)
# Grouping by Island, Species, and Gender and calculating descriptive statistics
statistics_table <- df1 %>%
group_by(Species, Gender) %>%
summarize(
Number_of_Observations = n(),
Mean_CulmenLength_mm = mean(CulmenLength_mm),
Mean_CulmenDepth_mm = mean(CulmenDepth_mm),
Mean_FlipperLength_mm = mean(FlipperLength_mm),
Mean_BodyMass_g = mean(BodyMass_g)
)
# View the resulting table
print(statistics_table)
library(dplyr)
# Grouping by Island, Species, and Gender and calculating descriptive statistics
statistics_table <- df1 %>%
group_by(Species, Gender) %>%
summarize(
Number_of_Observations = n(),
Mean_CulmenLength_mm = mean(CulmenLength_mm),
Mean_CulmenDepth_mm = mean(CulmenDepth_mm),
Mean_FlipperLength_mm = mean(FlipperLength_mm),
Mean_BodyMass_g = mean(BodyMass_g)
)
# View the resulting table
print(statistics_table)
# Extract numerical variables
numerical_vars <- df1 %>%
select_if(is.numeric)
# Pairs plot for numerical variables
ggpairs(numerical_vars)
# Pairs plot with color by Species
ggpairs(df1, columns = 4:7, aes(color = Species))
library(ggplot2)
# Standard Histogram
ggplot(df1, aes(x = CulmenLength_mm)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Standard Histogram", x = "Culmen Length (mm)", y = "Frequency")
# Histogram with Different Colors for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
labs(title = "Histogram by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("setosa" = "skyblue", "versicolor" = "lightgreen", "virginica" = "salmon"))
# Facet Plot with Histograms for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_wrap(~Species, scales = "free") +
labs(title = "Facet Plot by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("setosa" = "skyblue", "versicolor" = "lightgreen", "virginica" = "salmon"))
# Facet Plot with Histograms for Different Species and Gender
ggplot(df1, aes(x = CulmenLength_mm, fill = Gender)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_grid(Species ~ ., scales = "free_y") +
labs(title = "Facet Plot by Species and Gender", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Male" = "skyblue", "Female" = "salmon"))
library(ggplot2)
# Standard Histogram
ggplot(df1, aes(x = CulmenLength_mm)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Standard Histogram", x = "Culmen Length (mm)", y = "Frequency")
# Histogram with Different Colors for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
labs(title = "Histogram by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_wrap(~Species, scales = "free") +
labs(title = "Facet Plot by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species and Gender
ggplot(df1, aes(x = CulmenLength_mm, fill = Gender)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_grid(Species ~ Gender, scales = "free") +
labs(title = "Facet Plot by Species and Gender", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("MALE" = "skyblue", "FEMALE" = "salmon"))
library(ggplot2)
# Standard Histogram
ggplot(df1, aes(x = CulmenLength_mm)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Standard Histogram", x = "Culmen Length (mm)", y = "Frequency")
# Histogram with Different Colors for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
labs(title = "Histogram by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_wrap(~Species, scales = "free") +
labs(title = "Facet Plot by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species and Gender
ggplot(df1, aes(x = CulmenLength_mm, fill = Gender)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_grid(Species ~ ., scales = "free") +
labs(title = "Facet Plot by Species and Gender", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("MALE" = "skyblue", "FEMALE" = "salmon"))
library(ggplot2)
# Standard Histogram
ggplot(df1, aes(x = CulmenLength_mm)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Standard Histogram", x = "Culmen Length (mm)", y = "Frequency")
# Histogram with Different Colors for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
labs(title = "Histogram by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_wrap(~Species, scales = "free") +
labs(title = "Facet Plot by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species and Gender
ggplot(df1, aes(x = CulmenLength_mm, fill = Gender)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_grid(Species ~ Gender, scales = "free") +
labs(title = "Facet Plot by Species and Gender", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("MALE" = "skyblue", "FEMALE" = "salmon"))
# Density plot for CulmenLength_mm for different Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_density(alpha = 0.5) +
facet_grid(Gender ~ .) +
labs(title = "Density plot for CulmenLength_mm by Species (facet_grid: Gender)",
x = "CulmenLength_mm",
y = "Density")
# Density plot for CulmenLength_mm for different Species, facet_grid by Island
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_density(alpha = 0.5) +
facet_grid(Island ~ .) +
labs(title = "Density plot for CulmenLength_mm by Species (facet_grid: Island)",
x = "CulmenLength_mm",
y = "Density")
# Boxplot for CulmenLength_mm
ggplot(df1, aes(x = "", y = CulmenLength_mm)) +
geom_boxplot() +
labs(title = "Boxplot for CulmenLength_mm",
x = "",
y = "CulmenLength_mm")
# Boxplot for CulmenLength_mm, color by Species, facet_grid by Gender
ggplot(df1, aes(x = "", y = CulmenLength_mm, fill = Species)) +
geom_boxplot() +
facet_grid(Gender ~ .) +
labs(title = "Boxplot for CulmenLength_mm (facet_grid: Gender, colored by Species)",
x = "",
y = "CulmenLength_mm")
# Identify outliers
outliers <- boxplot.stats(df1$CulmenLength_mm)$out
print(paste("Identified outliers: ", paste(outliers, collapse = ", "), sep = ""))
# Scatterplot for CulmenLength_mm and BodyMass_g, color by Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Scatterplot for CulmenLength_mm and BodyMass_g (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Scatterplot for CulmenLength_mm and BodyMass_g, color by Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point(shape = 2) +
facet_grid(Gender ~ .) +
labs(title = "Scatterplot for CulmenLength_mm and BodyMass_g (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Scatterplot for CulmenLength_mm and BodyMass_g, color by Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point(shape = 3) +
facet_grid(Gender ~ .) +
labs(title = "Scatterplot for CulmenLength_mm and BodyMass_g (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Scatterplot for CulmenLength_mm and BodyMass_g, color by Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Scatterplot for CulmenLength_mm and BodyMass_g (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
install.packages("ggplot2")
install.packages("GGally")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("plotly")
install.packages("dplyr")
install.packages("psych")
install.packages("doBy")
install.packages("doBy")
library(ggplot2)
library(GGally)
library(dplyr)
library(plotly)
library(psych)
library(doBy)
# Read CSV file into a data frame
df1 <- read.csv2("E:\\IML assignment\\EDA penguins\\PenguinsWithoutMissingValues.csv")
head(df1)
num_columns <- ncol(df1)
num_columns
variable_names <- names(df1)
variable_names
# Use describe() from psych for more detailed summary statistics
detailed_summary <- describe(df1)
# Print the detailed summary statistics
detailed_summary
library(dplyr)
library(magrittr)
# df1 is my dataframe
penguins_per_species <- df1 %>%
group_by(Species) %>%
summarize(Count = n())
penguins_per_species
# i believe this is better way to do it, it is less code :P
species_counts <- table(df1$Species)
species_counts
# Pengiun per specie and gender
penguins_count <- df1 %>%
group_by(Species, Gender) %>%
summarize(Count = n())
penguins_count
library(dplyr)
# Grouping by Species, and Gender and calculating descriptive statistics
summary_table <- df1 %>%
group_by(Species, Gender) %>%
summarize(
Number_of_Observations = n(),
Min_BodyMass = min(BodyMass_g	),
Median_BodyMass = median(BodyMass_g	),
Mean_BodyMass = mean(BodyMass_g	),
Max_BodyMass = max(BodyMass_g	)
)
# View the resulting table
summary_table
library(dplyr)
# Grouping by Island, Species, and Gender and calculating descriptive statistics
statistics_table <- df1 %>%
group_by(Species, Gender) %>%
summarize(
Number_of_Observations = n(),
Mean_CulmenLength_mm = mean(CulmenLength_mm),
Mean_CulmenDepth_mm = mean(CulmenDepth_mm),
Mean_FlipperLength_mm = mean(FlipperLength_mm),
Mean_BodyMass_g = mean(BodyMass_g)
)
# View the resulting table
print(statistics_table)
# Extract numerical variables
numerical_vars <- df1 %>%
select_if(is.numeric)
# Pairs plot for numerical variables
ggpairs(numerical_vars)
# Pairs plot with color by Species
ggpairs(df1, columns = 4:7, aes(color = Species))
library(ggplot2)
# Standard Histogram
ggplot(df1, aes(x = CulmenLength_mm)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Standard Histogram", x = "Culmen Length (mm)", y = "Frequency")
# Histogram with Different Colors for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
labs(title = "Histogram by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_wrap(~Species, scales = "free") +
labs(title = "Facet Plot by Species", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("Adelie" = "skyblue", "Chinstrap" = "lightgreen", "Gentoo" = "salmon"))
# Facet Plot with Histograms for Different Species and Gender
ggplot(df1, aes(x = CulmenLength_mm, fill = Gender)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.7) +
facet_grid(Species ~ Gender, scales = "free") +
labs(title = "Facet Plot by Species and Gender", x = "Culmen Length (mm)", y = "Frequency") +
scale_fill_manual(values = c("MALE" = "skyblue", "FEMALE" = "salmon"))
# Density plot for CulmenLength_mm for different Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_density(alpha = 0.5) +
facet_grid(Gender ~ .) +
labs(title = "Density plot for CulmenLength_mm by Species (facet_grid: Gender)",
x = "CulmenLength_mm",
y = "Density")
# Density plot for CulmenLength_mm for different Species, facet_grid by Island
ggplot(df1, aes(x = CulmenLength_mm, fill = Species)) +
geom_density(alpha = 0.5) +
facet_grid(Island ~ .) +
labs(title = "Density plot for CulmenLength_mm by Species (facet_grid: Island)",
x = "CulmenLength_mm",
y = "Density")
# Boxplot for CulmenLength_mm
ggplot(df1, aes(x = "", y = CulmenLength_mm)) +
geom_boxplot() +
labs(title = "Boxplot for CulmenLength_mm",
x = "",
y = "CulmenLength_mm")
# Boxplot for CulmenLength_mm, color by Species, facet_grid by Gender
ggplot(df1, aes(x = "", y = CulmenLength_mm, fill = Species)) +
geom_boxplot() +
facet_grid(Gender ~ .) +
labs(title = "Boxplot for CulmenLength_mm (facet_grid: Gender, colored by Species)",
x = "",
y = "CulmenLength_mm")
# Scatterplot for CulmenLength_mm and BodyMass_g, color by Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Scatterplot for CulmenLength_mm and BodyMass_g (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Identify outliers based on z-scores
df1$outliers <- as.factor(ifelse(abs(scale(df1$CulmenLength_mm)) > 2 | abs(scale(df1$BodyMass_g)) > 2, "Outlier", "Not Outlier"))
# Add outlier information to the ggplot
gg_scatterplot <- gg_scatterplot + geom_point(aes(shape = outliers), size = 3)
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Scatterplot for CulmenLength_mm and BodyMass_g, color by Species, facet_grid by Gender
ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Scatterplot for CulmenLength_mm and BodyMass_g (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text") %>%
layout(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
xaxis = list(title = "CulmenLength_mm"),
yaxis = list(title = "BodyMass_g"))
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text")
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID))) +
# Create ggplot scatterplot
gg_scatterplot <- ggplot(df1, aes(x = CulmenLength_mm, y = BodyMass_g, color = Species, text = IndividualID)) +
geom_point() +
facet_grid(Gender ~ .) +
labs(title = "Interactive Scatterplot with ggplotly (facet_grid: Gender, colored by Species)",
x = "CulmenLength_mm",
y = "BodyMass_g")
# Convert ggplot to ggplotly
ggplotly(gg_scatterplot, tooltip = "text")
